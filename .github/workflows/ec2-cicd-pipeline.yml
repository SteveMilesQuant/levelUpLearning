name: Level Up Learning React/FastAPI CI/CD for AWS EC2 with Docker

on:
  push:
    branches:
      - main

jobs:
  CI:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: Virtual ENV
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: virt
          # The cache key depends on requirements.txt
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Activate Virtual ENV
        run: python3 -m venv virt && source virt/bin/activate && python3 -m pip install -r api/requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Run Tests
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_HOST: ${{ secrets.DB_HOST }}
        run: . virt/bin/activate && cd api && export PYTHONPATH=. && pytest

  API-CD:
    runs-on: self-hosted
    needs: [CI]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2

      - name: Create docker image
        run: sudo docker build -t level-up-learning api

      - name: Restart docker container
        run: sudo docker rm lul-container && sudo docker run -d --env-file /home/ec2-user/teacherCamp/api/.env --name lul-container -p 8000:8000 level-up-learning

  APP-CD-BUILD:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2

      - name: Install node dependencies
        run: cd app && npm install

      - name: Production build
        num: cd app && echo VITE_GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}$'\n'VITE_API_URL=/api > .env && npm run build

      - name: Add built app files to Zip file
        run: zip -g ./app.zip -r ./app/dist
