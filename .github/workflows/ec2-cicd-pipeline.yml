name: Level Up Learning React/FastAPI CI/CD for AWS EC2 with Docker

on:
  push:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Virtual ENV
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: virt
          # The cache key depends on requirements.txt
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Activate Virtual ENV
        run: |
          python3 -m venv virt
          source virt/bin/activate
          python3 -m pip install -r api/requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Run Tests
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_HOST: ${{ secrets.DB_HOST }}
        run: |
          . virt/bin/activate
          cd api
          export PYTHONPATH=.
          pytest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: lul
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  CD:
    runs-on: [self-hosted, ec2]
    needs: [CI]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull docker image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: lul
        run: sudo docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Restart docker container from new image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: lul
        run: |
          sudo docker stop lul-container
          sudo docker rm lul-container
          sudo docker run -d --env-file /home/ec2-user/.env --name lul-container -p 8000:8000 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
